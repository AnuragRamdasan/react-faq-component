{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["dataJSON","title","rows","content","data","styles","titleTextColor","rowTitleColor","IndexPage","useEffect","Prism","highlightAll","setShowFlag","useState","showFaq","className","href","src","alt","to","JSON","stringify"],"mappings":"2FAAA,iHAQMA,GARN,sEAQiB,CACfC,MAAO,YACPC,KAAM,CACJ,CACED,MAAO,aACPE,QAAS,YAEX,CACEF,MAAO,aACPE,QAAS,eAKTC,EAAO,CACXH,MAAO,qBACPC,KAAM,CACJ,CACED,MAAO,8BACPE,QAAQ,iaAKV,CACEF,MAAO,6CACPE,QACE,iHAEJ,CACEF,MAAO,4BACPE,QAAQ,qGAEV,CACEF,MAAO,8BACPE,QAAS,YAuCTE,EAAS,CAEbC,eAAgB,OAChBC,cAAe,QAoFFC,UAhFG,WAChBC,qBAAU,WAERC,IAAMC,eACNC,GAAY,MAJQ,MAMSC,oBAAS,GAAjCC,EANe,KAMNF,EANM,KAQtB,OACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAM,wBACX,kBAAC,IAAD,MACA,mDACA,6BAASc,UAAU,UACjB,uBAAGC,KAAK,qDACN,yBAAKC,IAAI,+CAA+CC,IAAI,aAE9D,uBAAGF,KAAK,4DACN,yBACEC,IAAI,kEACJC,IAAI,YAGR,uBAAGF,KAAK,yEACN,yBACEC,IAAI,mEACJC,IAAI,cAKV,6BAASH,UAAU,QACjB,oCAEA,6CACGD,EACC,kBAAC,IAAD,CAAKV,KAAMA,EAAMC,OAAQA,IAAY,KAE3C,kBAAC,IAAD,CAAMc,GAAI,cAAV,cAIA,6BAASJ,UAAU,SACjB,qCACA,qDACA,6BACE,0BAAMA,UAAU,mBAAhB,2CAIF,oDACA,6BACE,0BAAMA,UAAU,mBAAhB,2CAIF,6BACA,0CACA,6BACA,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,gBAtGV,00BAyGV,6BAASA,UAAU,cACjB,2CACA,mDACuB,uDADvB,qCAEsB,yCAFtB,gBAE0D,IACxD,wCAHF,wBAKA,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,iBACbK,KAAKC,UAAUrB,EAAU,KAAM","file":"component---src-pages-index-js-2a752703a9d42314852e.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Gitfork from \"../components/githubFork\"\nimport Faq from \"react-faq-component\";\nimport Prism from 'prismjs';\n\nconst dataJSON = {\n  title: \"FAQ title\",\n  rows: [\n    {\n      title: \"Question 1\",\n      content: \"Answer 1\",\n    },\n    {\n      title: \"Question 2\",\n      content: \"Answer 2\",\n    },\n  ],\n}\n\nconst data = {\n  title: \"FAQ (How it works)\",\n  rows: [\n    {\n      title: \"Lorem ipsum dolor sit amet,\",\n      content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat, \n              ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus. \n              In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae. \n              Fusce sed commodo purus, at tempus turpis.`,\n    },\n    {\n      title: \"Nunc maximus, magna at ultricies elementum\",\n      content:\n        \"Nunc maximus, magna at ultricies elementum, risus turpis vulputate quam, vitae convallis ex tortor sed dolor.\",\n    },\n    {\n      title: \"Can I use html as content\",\n      content: `Yes, here is an example of a <a href=\"https://binodswain.github.io/react-faq-component/\">link</a>`,\n    },\n    {\n      title: \"What is the package version\",\n      content: \"v1.0.0\",\n    },\n  ],\n}\nconst htmlcode = `import React, { Component } from 'react';\nimport Faq from 'react-faq-component';\n\nconst data = {\n  title: \"FAQ (How it works)\",\n  rows: [\n    {\n      title: \"Lorem ipsum dolor sit amet,\",\n      content: \"Lorem ipsum dolor sit amet, consectetur \"\n    },\n    {\n      title: \"Nunc maximus, magna at ultricies elementum\",\n      content: \"Nunc maximus, magna at ultricies elementum, risus turpis vulputate quam.\"\n    },\n    {\n      title: \"Curabitur laoreet, mauris vel blandit fringilla\",\n      content: \"Curabitur laoreet, mauris vel blandit fringilla, leo elit rhoncus nunc\"\n    },\n    {\n      title: \"What is the package version\",\n      content: \"v1.0.0\"\n    }]\n}\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Faq data={data}/>\n      </div>\n    )\n  }\n}\n`\n\nconst styles = {\n  // bgColor: 'white',\n  titleTextColor: \"blue\",\n  rowTitleColor: \"blue\",\n  // rowContentColor: 'grey'\n}\n\nconst IndexPage = () => {\n  useEffect(() => {\n    // call the highlightAll() function to style our code blocks\n    Prism.highlightAll()\n    setShowFlag(true)\n  })\n  const [showFaq, setShowFlag] = useState(false)\n  \n  return (\n  <Layout>\n    <SEO title=\"react-faq-component\" />\n    <Gitfork />\n    <h1>react-faq-component</h1>\n    <section className=\"badges\">\n      <a href=\"https://www.npmjs.com/package/react-faq-component\">\n        <img src=\"https://badgen.net/npm/v/react-faq-component\" alt=\"release\" />\n      </a>\n      <a href=\"https://github.com/binodswain/react-faq-component/issues\">\n        <img\n          src=\"https://badgen.net/github/issues/binodswain/react-faq-component\"\n          alt=\"issues\"\n        />\n      </a>\n      <a href=\"https://github.com/binodswain/react-faq-component/blob/master/LICENSE\">\n        <img\n          src=\"https://badgen.net/github/license/binodswain/react-faq-component\"\n          alt=\"license\"\n        />\n      </a>\n    </section>\n\n    <section className=\"demo\">\n      <h2>Demo</h2>\n      \n      <h4>default view:</h4>\n        {showFaq ? \n          <Faq data={data} styles={styles} /> :null\n        }\n    <Link to={'/demo-more'}>More demo</Link>\n      \n    </section>\n\n    <section className=\"usage\">\n      <h3>Usage</h3>\n      <div>Install the package.</div>\n      <pre>\n        <code className=\"language-markup\">\n          npm install --save react-faq-component\n        </code>\n      </pre>\n      <div>Import the package.</div>\n      <pre>\n        <code className=\"language-markup\">\n          import Faq from 'react-faq-component';\n        </code>\n      </pre>\n      <br />\n      <div>example: </div>\n      <br />\n      <pre className=\"line-numbers\">\n        <code className=\"language-jsx\">{htmlcode}</code>\n      </pre>\n    </section>\n    <section className=\"dataformat\">\n      <h3>Data format</h3>\n      <p>\n        The data passed into <strong>react-faq-component</strong> is an object\n        having two keys i.e <strong>title</strong> (String) and{\" \"}\n        <strong>rows</strong> (array of objects).\n      </p>\n      <pre className=\"line-numbers\">\n        <code className=\"language-json\">\n          {JSON.stringify(dataJSON, null, 4)}\n        </code>\n      </pre>\n    </section>\n  </Layout>\n)\n}\n\nexport default IndexPage\n"],"sourceRoot":""}